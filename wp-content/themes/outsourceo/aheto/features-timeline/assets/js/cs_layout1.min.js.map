{"version":3,"sources":["aheto/features-timeline/assets/js/cs_layout1.js"],"names":["$","window","document","timelines","eventsMinDistance","string","updateSlide","translateTimeline","timelineComponents","translateValue","getTranslateValue","showNewContent","timelineTotWidth","css","replace","visibleContent","newContent","wrapperWidth","selectedDate","updateFilling","next","prev","removeClass","updateOlderEvents","find","updateTimelinePosition","newEvent","children","parent","updateVisibleContent","eventStyle","getComputedStyle","event","eventLeft","timelineWidth","Number","getPropertyValue","value","eventsWrapper","timelineTranslate","totWidth","setTransformValue","get","selectedEvent","addClass","eventWidth","filling","scaleValue","setDatePosition","distanceNorm","daydiff","distance","classEnetering","eventsContent","classLeaving","data","eventDate","selectedContent","height","index","attr","one","timelineStyle","selectedContentHeight","end","nextAll","timeline","element","style","property","indexOf","split","dateComp","dateArrays","first","round","second","Math","elementInViewport","el","top","offsetTop","checkMQ","offsetLeft","width","offsetWidth","offsetParent","touchsurface","swipedetect","swipedir","dist","distX","pageYOffset","innerHeight","distY","pageXOffset","innerWidth","threshold","left","initTimeline","this","events","dateDistances","each","length","dates","i","push","parseDate","offsetHeight","minLapse","min","setTimelineWidth","timeSpan","timeSpanNorm","eq","totalWidth","preventDefault","addEventListener","startX","startY","touchobj","changedTouches","e","pageY","pageX","elapsedTime","allowedTime","startTime","Date","getTime","handleswipe","abs","querySelector","keyup","which","jQuery"],"mappings":"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","file":"cs_layout1.min.js","sourcesContent":[";(function ($, window, document, undefined) {\n\n\n    let timelines = $('.aheto-timeline--outsourceo-modern'),\n        eventsMinDistance = 100;\n\n    (timelines.length > 0) && initTimeline(timelines);\n\n    function initTimeline(timelines) {\n        timelines.each(function () {\n\n            const timeline = $(this),\n                timelineComponents = {};\n            //cache timeline components\n            timelineComponents['timelineWrapper'] = timeline.find('.aheto-timeline__events-wrapper');\n            timelineComponents['eventsWrapper'] = timelineComponents['timelineWrapper'].children('.aheto-timeline__events');\n            timelineComponents['fillingLine'] = timelineComponents['eventsWrapper'].children('.aheto-timeline__filling-line');\n            timelineComponents['timelineEvents'] = timelineComponents['eventsWrapper'].find('a');\n            timelineComponents['timelineDates'] = parseDate(timelineComponents['timelineEvents']);\n            timelineComponents['eventsMinLapse'] = minLapse(timelineComponents['timelineDates']);\n            timelineComponents['timelineNavigation'] = timeline.find('.aheto-timeline__navigation');\n            timelineComponents['eventsContent'] = timeline.children('.aheto-timeline__events-content');\n\n            //assign a left postion to the single events along the timeline\n            setDatePosition(timelineComponents, eventsMinDistance);\n            //assign a width to the timeline\n            const timelineTotWidth = setTimelineWidth(timelineComponents, eventsMinDistance);\n            //the timeline has been initialize - show it\n            timeline.addClass('loaded');\n\n            //detect click on the next arrow\n            timelineComponents['timelineNavigation'].on('click', '.next', function (event) {\n                event.preventDefault();\n                updateSlide(timelineComponents, timelineTotWidth, 'next');\n            });\n            //detect click on the prev arrow\n            timelineComponents['timelineNavigation'].on('click', '.prev', function (event) {\n                event.preventDefault();\n                updateSlide(timelineComponents, timelineTotWidth, 'prev');\n            });\n            //detect click on the a single event - show new event content\n            timelineComponents['eventsWrapper'].on('click', 'a', function (event) {\n                event.preventDefault();\n                timelineComponents['timelineEvents'].removeClass('selected');\n                $(this).addClass('selected');\n                updateOlderEvents($(this));\n                updateFilling($(this), timelineComponents['fillingLine'], timelineTotWidth);\n                updateVisibleContent($(this), timelineComponents['eventsContent']);\n            });\n\n            //on swipe, show next/prev event content\n            // timelineComponents['eventsContent'].on('swipeleft', function () {\n            //     const mq = checkMQ();\n            //     (mq == 'mobile') && showNewContent(timelineComponents, timelineTotWidth, 'next');\n            // });\n            // timelineComponents['eventsContent'].on('swiperight', function () {\n            //     const mq = checkMQ();\n            //     (mq == 'mobile') && showNewContent(timelineComponents, timelineTotWidth, 'prev');\n            // });\n            // timelineComponents['eventsContent'].on('touchstart', function () {\n            //     showNewContent(timelineComponents, timelineTotWidth, 'next');\n            // });\n\n            const el = document.querySelector('.aheto-timeline--outsourceo-modern');\n            swipedetect(el, function(swipedir){\n                if (swipedir =='left') {\n                    showNewContent(timelineComponents, timelineTotWidth, 'next');\n                }\n                if(swipedir == 'right') {\n                    showNewContent(timelineComponents, timelineTotWidth, 'prev');\n                }\n            });\n\n\n            //keyboard navigation\n            $(document).keyup(function (event) {\n                if (event.which == '37' && elementInViewport(timeline.get(0))) {\n                    showNewContent(timelineComponents, timelineTotWidth, 'prev');\n                } else if (event.which == '39' && elementInViewport(timeline.get(0))) {\n                    showNewContent(timelineComponents, timelineTotWidth, 'next');\n                }\n            });\n        });\n    }\n\n    function updateSlide(timelineComponents, timelineTotWidth, string) {\n        //retrieve translateX value of timelineComponents['eventsWrapper']\n        const translateValue = getTranslateValue(timelineComponents['eventsWrapper']),\n            wrapperWidth = Number(timelineComponents['timelineWrapper'].css('width').replace('px', ''));\n        //translate the timeline to the left('next')/right('prev')\n        (string == 'next')\n            ? translateTimeline(timelineComponents, translateValue - wrapperWidth + eventsMinDistance, wrapperWidth - timelineTotWidth)\n            : translateTimeline(timelineComponents, translateValue + wrapperWidth - eventsMinDistance);\n    }\n\n    function showNewContent(timelineComponents, timelineTotWidth, string) {\n        //go from one event to the next/previous one\n        const visibleContent = timelineComponents['eventsContent'].find('.selected'),\n            newContent = (string == 'next') ? visibleContent.next() : visibleContent.prev();\n\n        if (newContent.length > 0) { //if there's a next/prev event - show it\n            const selectedDate = timelineComponents['eventsWrapper'].find('.selected'),\n                newEvent = (string == 'next') ? selectedDate.parent('li').next('li').children('a') : selectedDate.parent('li').prev('li').children('a');\n\n            updateFilling(newEvent, timelineComponents['fillingLine'], timelineTotWidth);\n            updateVisibleContent(newEvent, timelineComponents['eventsContent']);\n            newEvent.addClass('selected');\n            selectedDate.removeClass('selected');\n            updateOlderEvents(newEvent);\n            updateTimelinePosition(string, newEvent, timelineComponents, timelineTotWidth);\n        }\n    }\n\n    function updateTimelinePosition(string, event, timelineComponents, timelineTotWidth) {\n        //translate timeline to the left/right according to the position of the selected event\n        const eventStyle = window.getComputedStyle(event.get(0), null),\n            eventLeft = Number(eventStyle.getPropertyValue(\"left\").replace('px', '')),\n            timelineWidth = Number(timelineComponents['timelineWrapper'].css('width').replace('px', ''));\n\n        timelineTotWidth = Number(timelineComponents['eventsWrapper'].css('width').replace('px', ''));\n        const timelineTranslate = getTranslateValue(timelineComponents['eventsWrapper']);\n\n        if ((string == 'next' && eventLeft > timelineWidth - timelineTranslate) || (string == 'prev' && eventLeft < -timelineTranslate)) {\n            translateTimeline(timelineComponents, -eventLeft + timelineWidth / 2, timelineWidth - timelineTotWidth);\n        }\n    }\n\n\n    function translateTimeline(timelineComponents, value, totWidth) {\n        const eventsWrapper = timelineComponents['eventsWrapper'].get(0);\n        value = (value > 0) ? 0 : value; //only negative translate value\n        value = (!(typeof totWidth === 'undefined') && value < totWidth) ? totWidth : value; //do not translate more than timeline width\n        setTransformValue(eventsWrapper, 'translateX', value + 'px');\n        //update navigation arrows visibility\n        (value == 0) ? timelineComponents['timelineNavigation'].find('.prev').addClass('inactive') : timelineComponents['timelineNavigation'].find('.prev').removeClass('inactive');\n        (value == totWidth) ? timelineComponents['timelineNavigation'].find('.next').addClass('inactive') : timelineComponents['timelineNavigation'].find('.next').removeClass('inactive');\n    }\n\n    function updateFilling(selectedEvent, filling, totWidth) {\n        //change .aheto-timeline__filling-line length according to the selected event\n        const eventStyle = window.getComputedStyle(selectedEvent.get(0), null);\n        let eventLeft = eventStyle.getPropertyValue(\"left\");\n        const eventWidth = eventStyle.getPropertyValue(\"width\");\n        eventLeft = Number(eventLeft.replace('px', '')) + Number(eventWidth.replace('px', '')) / 2;\n        const scaleValue = eventLeft / totWidth;\n        setTransformValue(filling.get(0), 'scaleX', scaleValue);\n    }\n\n    function setDatePosition(timelineComponents, min) {\n        for (let i = 0; i < timelineComponents['timelineDates'].length; i++) {\n            const distance = daydiff(timelineComponents['timelineDates'][0], timelineComponents['timelineDates'][i]),\n                distanceNorm = Math.round(distance / timelineComponents['eventsMinLapse']) + 2;\n            timelineComponents['timelineEvents'].eq(i).css('left', distanceNorm * min + 'px');\n        }\n    }\n\n    function setTimelineWidth(timelineComponents, width) {\n        const timeSpan = daydiff(timelineComponents['timelineDates'][0], timelineComponents['timelineDates'][timelineComponents['timelineDates'].length - 1]);\n        let timeSpanNorm = timeSpan / timelineComponents['eventsMinLapse'];\n        timeSpanNorm = Math.round(timeSpanNorm) + 4;\n        const totalWidth = timeSpanNorm * width;\n        timelineComponents['eventsWrapper'].css('width', totalWidth + 'px');\n        updateFilling(timelineComponents['timelineEvents'].eq(0), timelineComponents['fillingLine'], totalWidth);\n\n        return totalWidth;\n    }\n\n    function updateVisibleContent(event, eventsContent) {\n        const eventDate = event.data('date'),\n            visibleContent = eventsContent.find('.selected'),\n            selectedContent = eventsContent.find('[data-date=\"' + eventDate + '\"]'),\n            selectedContentHeight = selectedContent.height();\n        let classEnetering,\n            classLeaving;\n\n        if (selectedContent.index() > visibleContent.index()) {\n            classEnetering = 'selected enter-right';\n            classLeaving = 'leave-left';\n        } else {\n            classEnetering = 'selected enter-left';\n            classLeaving = 'leave-right';\n        }\n\n\n        selectedContent.attr('class', classEnetering);\n        visibleContent.attr('class', classLeaving).one('webkitAnimationEnd oanimationend msAnimationEnd animationend', function () {\n            visibleContent.removeClass('leave-right leave-left');\n            selectedContent.removeClass('enter-left enter-right');\n        });\n        eventsContent.css('height', selectedContentHeight + 'px');\n    }\n\n    function updateOlderEvents(event) {\n        event.parent('li').prevAll('li').children('a').addClass('older-event').end().end().nextAll('li').children('a').removeClass('older-event');\n    }\n\n    function getTranslateValue(timeline) {\n        const timelineStyle = window.getComputedStyle(timeline.get(0), null);\n            let timelineTranslate = timelineStyle.getPropertyValue(\"-webkit-transform\") ||\n                timelineStyle.getPropertyValue(\"-moz-transform\") ||\n                timelineStyle.getPropertyValue(\"-ms-transform\") ||\n                timelineStyle.getPropertyValue(\"-o-transform\") ||\n                timelineStyle.getPropertyValue(\"transform\");\n        let translateValue = 0;\n\n        if (timelineTranslate.indexOf('(') >= 0) {\n             timelineTranslate = timelineTranslate.split('(')[1];\n            timelineTranslate = timelineTranslate.split(')')[0];\n            timelineTranslate = timelineTranslate.split(',');\n             translateValue = timelineTranslate[4];\n        }\n\n\n        return Number(translateValue);\n    }\n\n    function setTransformValue(element, property, value) {\n        element.style[\"-webkit-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"-moz-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"-ms-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"-o-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"transform\"] = property + \"(\" + value + \")\";\n    }\n\n    //based on http://stackoverflow.com/questions/542938/how-do-i-get-the-number-of-days-between-two-dates-in-javascript\n    function parseDate(events) {\n        const dateArrays = [];\n        events.each(function () {\n            const dateComp = $(this).data('date'),\n                newDate = new Date(dateComp);\n            dateArrays.push(newDate);\n\n        });\n        return dateArrays;\n    }\n\n    function daydiff(first, second) {\n        return Math.round((second - first));\n    }\n\n    function minLapse(dates) {\n        //determine the minimum distance among events\n        const dateDistances = [];\n        for (let i = 1; i < dates.length; i++) {\n            const distance = daydiff(dates[i - 1], dates[i]);\n            dateDistances.push(distance);\n        }\n        return Math.min.apply(null, dateDistances);\n    }\n\n    /*\n        How to tell if a DOM element is visible in the current viewport?\n        http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\n    */\n    function elementInViewport(el) {\n        let top = el.offsetTop;\n        let left = el.offsetLeft;\n        let width = el.offsetWidth;\n        let height = el.offsetHeight;\n\n        while (el.offsetParent) {\n            el = el.offsetParent;\n            top += el.offsetTop;\n            left += el.offsetLeft;\n        }\n\n        return (\n            top < (window.pageYOffset + window.innerHeight) &&\n            left < (window.pageXOffset + window.innerWidth) &&\n            (top + height) > window.pageYOffset &&\n            (left + width) > window.pageXOffset\n        );\n    }\n\n    function checkMQ() {\n        //check if mobile or desktop device\n        return window.getComputedStyle(document.querySelector('.aheto-timeline--outsourceo-modern'), '::before').getPropertyValue('content').replace(/'/g, \"\").replace(/\"/g, \"\");\n    }\n\n    function swipedetect(el, callback){\n\n        var touchsurface = el,\n            swipedir,\n            startX,\n            startY,\n            dist,\n            distX,\n            distY,\n            threshold = 150, //required min distance traveled to be considered swipe\n            restraint = 100, // maximum distance allowed at the same time in perpendicular direction\n            allowedTime = 300, // maximum time allowed to travel that distance\n            elapsedTime,\n            startTime,\n            handleswipe = callback || function(swipedir){};\n\n        touchsurface.addEventListener('touchstart', function(e){\n            var touchobj = e.changedTouches[0];\n            swipedir = 'none';\n            dist = 0;\n            startX = touchobj.pageX;\n            startY = touchobj.pageY;\n            startTime = new Date().getTime() ;// record time when finger first makes contact with surface\n            e.preventDefault();\n        }, false);\n\n        touchsurface.addEventListener('touchmove', function(e){\n            e.preventDefault(); // prevent scrolling when inside DIV\n        }, false);\n\n        touchsurface.addEventListener('touchend', function(e){\n            var touchobj = e.changedTouches[0];\n            distX = touchobj.pageX - startX ;// get horizontal dist traveled by finger while in contact with surface\n            distY = touchobj.pageY - startY; // get vertical dist traveled by finger while in contact with surface\n            elapsedTime = new Date().getTime() - startTime; // get time elapsed\n            if (elapsedTime <= allowedTime){ // first condition for awipe met\n                if (Math.abs(distX) >= threshold && Math.abs(distY) <= restraint){ // 2nd condition for horizontal swipe met\n                    swipedir = (distX < 0)? 'left' : 'right' // if dist traveled is negative, it indicates left swipe\n                }\n                else if (Math.abs(distY) >= threshold && Math.abs(distX) <= restraint){ // 2nd condition for vertical swipe met\n                    swipedir = (distY < 0)? 'up' : 'down' // if dist traveled is negative, it indicates up swipe\n                }\n            }\n            handleswipe(swipedir);\n            e.preventDefault()\n        }, false)\n    }\n})(jQuery, window, document);\n"]}