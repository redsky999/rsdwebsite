{"version":3,"sources":["aheto/features-timeline/assets/js/main.js"],"names":["HorizontalTimeline","element","this","line","getElementsByClassName","fillingLine","datesContainer","date","selectedDate","dateValues","timeline","dateArrays","resetAnimation","i","length","Util","contentWrapper","style","height","content","dateComp","dayComp","split","timeComp","indexOf","keyNavigateTimeline","newIndex","selectNewDate","newDate","Date","push","parseDate","minLapse","window","dateDistances","Number","timelineWidth","offsetWidth","distance","daydiff","direction","eventLeft","Math","min","apply","calcMinLapse","navigation","eventsMinDistance","eventsMaxDistance","translate","lineLength","oldDateIndex","getIndexInArray","newDateIndex","initEvents","initTimeline","j","distanceNorm","left","setAttribute","resetTimelinePosition","event","self","addEventListener","preventDefault","translateTimeline","SwipeContent","updateFilling","containerWidth","getPropertyValue","width","transform","addClass","removeClass","target","updateOlderEvents","updateVisibleContent","classEntering","classLeaving","offsetHeight","dateStyle","replace","getComputedStyle","eventStyle","first","second","round","horizontalTimeline","horizontalTimelineTimelineArray","singleDate","document","keyCode","key","toLowerCase","updateHorizontalTimeline","elementInViewport","el","top","offsetLeft","offsetTop","pageYOffset","innerHeight","pageXOffset","innerWidth"],"mappings":"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","file":"main.min.js","sourcesContent":["(function() {\n  // Horizontal Timeline - by CodyHouse.co\n  var HorizontalTimeline = function(element) {\n\t\tthis.element = element;\n\t\tthis.datesContainer = this.element.getElementsByClassName('outsourceo-timeline__dates')[0];\n\t\tthis.line = this.datesContainer.getElementsByClassName('outsourceo-timeline__line')[0]; // grey line in the top timeline section\n\t\tthis.fillingLine = this.datesContainer.getElementsByClassName('outsourceo-timeline__filling-line')[0]; // green filling line in the top timeline section\n\t\tthis.date = this.line.getElementsByClassName('outsourceo-timeline__date');\n\t\tthis.selectedDate = this.line.getElementsByClassName('outsourceo-timeline__date--selected')[0];\n\t\tthis.dateValues = parseDate(this);\n\t\tthis.minLapse = calcMinLapse(this);\n\t\tthis.navigation = this.element.getElementsByClassName('outsourceo-timeline__navigation');\n\t\tthis.contentWrapper = this.element.getElementsByClassName('outsourceo-timeline__events')[0];\n\t\tthis.content = this.contentWrapper.getElementsByClassName('outsourceo-timeline__event');\n\n\t\tthis.eventsMinDistance = 60; // min distance between two consecutive events (in px)\n\t\tthis.eventsMaxDistance = 200; // max distance between two consecutive events (in px)\n\t\tthis.translate = 0; // this will be used to store the translate value of this.line\n\t\tthis.lineLength = 0; //total length of this.line\n\n\t\t// store index of selected and previous selected dates\n\t\tthis.oldDateIndex = Util.getIndexInArray(this.date, this.selectedDate);\n\t\tthis.newDateIndex = this.oldDateIndex;\n\t\tinitTimeline(this);\n\t\tinitEvents(this);\n  };\n\n  function initTimeline(timeline) {\n  \t// set dates left position\n  \tvar left = 0;\n\t\tfor (var i = 0; i < timeline.dateValues.length; i++) {\n\t\t\tvar j = (i == 0) ? 0 : i - 1;\n\t    var distance = daydiff(timeline.dateValues[j], timeline.dateValues[i]),\n\t    \tdistanceNorm = (Math.round(distance/timeline.minLapse) + 2)*timeline.eventsMinDistance;\n\n\t    if(distanceNorm < timeline.eventsMinDistance) {\n\t    \tdistanceNorm = timeline.eventsMinDistance;\n\t    } else if(distanceNorm > timeline.eventsMaxDistance) {\n\t    \tdistanceNorm = timeline.eventsMaxDistance;\n\t    }\n\t    left = left + distanceNorm;\n\t    timeline.date[i].setAttribute('style', 'left:' + left+'px');\n\t\t}\n\n\t\t// set line/filling line dimensions\n    timeline.line.style.width = (left + timeline.eventsMinDistance)+'px';\n\t\ttimeline.lineLength = left + timeline.eventsMinDistance;\n\t\t// reveal timeline\n\t\tUtil.addClass(timeline.element, 'outsourceo-timeline--loaded');\n\t\tselectNewDate(timeline, timeline.selectedDate);\n\t\tresetTimelinePosition(timeline, 'next');\n  };\n\n  function initEvents(timeline) {\n  \tvar self = timeline;\n\t\t// click on arrow navigation\n\t\tself.navigation[0].addEventListener('click', function(event){\n\t\t\tevent.preventDefault();\n\t\t\ttranslateTimeline(self, 'prev');\n\t\t});\n\t\tself.navigation[1].addEventListener('click', function(event){\n\t\t\tevent.preventDefault();\n\t\t\ttranslateTimeline(self, 'next');\n\t\t});\n\n\t\t//swipe on timeline\n\t\tnew SwipeContent(self.datesContainer);\n\t\tself.datesContainer.addEventListener('swipeLeft', function(event){\n\t\t\ttranslateTimeline(self, 'next');\n\t\t});\n\t\tself.datesContainer.addEventListener('swipeRight', function(event){\n\t\t\ttranslateTimeline(self, 'prev');\n\t\t});\n\n\t\t//select a new event\n\t\tfor(var i = 0; i < self.date.length; i++) {\n\t\t\t(function(i){\n\t\t\t\tself.date[i].addEventListener('click', function(event){\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tselectNewDate(self, event.target);\n\t\t\t\t});\n\n\t\t\t\tself.content[i].addEventListener('animationend', function(event){\n\t\t\t\t\tif( i == self.newDateIndex && self.newDateIndex != self.oldDateIndex) resetAnimation(self);\n\t\t\t\t});\n\t\t\t})(i);\n\t\t}\n  };\n\n  function updateFilling(timeline) { // update fillingLine scale value\n\t\tvar dateStyle = window.getComputedStyle(timeline.selectedDate, null),\n\t\t\tleft = dateStyle.getPropertyValue(\"left\"),\n\t\t\twidth = dateStyle.getPropertyValue(\"width\");\n\n\t\tleft = Number(left.replace('px', '')) + Number(width.replace('px', ''))/2;\n\t\ttimeline.fillingLine.style.transform = 'scaleX('+(left/timeline.lineLength)+')';\n\t};\n\n  function translateTimeline(timeline, direction) { // translate timeline (and date elements)\n  \tvar containerWidth = timeline.datesContainer.offsetWidth;\n  \tif(direction) {\n  \t\ttimeline.translate = (direction == 'next') ? timeline.translate - containerWidth + timeline.eventsMinDistance : timeline.translate + containerWidth - timeline.eventsMinDistance;\n  \t}\n    if( 0 - timeline.translate > timeline.lineLength - containerWidth ) timeline.translate = containerWidth - timeline.lineLength;\n    if( timeline.translate > 0 ) timeline.translate = 0;\n\n    timeline.line.style.transform = 'translateX('+timeline.translate+'px)';\n    // update the navigation items status (toggle inactive class)\n\t\t(timeline.translate == 0 ) ? Util.addClass(timeline.navigation[0], 'outsourceo-timeline__navigation--inactive') : Util.removeClass(timeline.navigation[0], 'outsourceo-timeline__navigation--inactive');\n\t\t(timeline.translate == containerWidth - timeline.lineLength ) ? Util.addClass(timeline.navigation[1], 'outsourceo-timeline__navigation--inactive') : Util.removeClass(timeline.navigation[1], 'outsourceo-timeline__navigation--inactive');\n  };\n\n\tfunction selectNewDate(timeline, target) { // ned date has been selected -> update timeline\n\t\ttimeline.newDateIndex = Util.getIndexInArray(timeline.date, target);\n\t\ttimeline.oldDateIndex = Util.getIndexInArray(timeline.date, timeline.selectedDate);\n\t\tUtil.removeClass(timeline.selectedDate, 'outsourceo-timeline__date--selected');\n\t\tUtil.addClass(timeline.date[timeline.newDateIndex], 'outsourceo-timeline__date--selected');\n\t\ttimeline.selectedDate = timeline.date[timeline.newDateIndex];\n\t\tupdateOlderEvents(timeline);\n\t\tupdateVisibleContent(timeline);\n\t\tupdateFilling(timeline);\n\t};\n\n\tfunction updateOlderEvents(timeline) { // update older events style\n\t\tfor(var i = 0; i < timeline.date.length; i++) {\n\t\t\t(i < timeline.newDateIndex) ? Util.addClass(timeline.date[i], 'outsourceo-timeline__date--older-event') : Util.removeClass(timeline.date[i], 'outsourceo-timeline__date--older-event');\n\t\t}\n\t};\n\n\tfunction updateVisibleContent(timeline) { // show content of new selected date\n\t\tif (timeline.newDateIndex > timeline.oldDateIndex) {\n\t\t\tvar classEntering = 'outsourceo-timeline__event--selected outsourceo-timeline__event--enter-right',\n\t\t\t\tclassLeaving = 'outsourceo-timeline__event--leave-left';\n\t\t} else if(timeline.newDateIndex < timeline.oldDateIndex) {\n\t\t\tvar classEntering = 'outsourceo-timeline__event--selected outsourceo-timeline__event--enter-left',\n\t\t\t\tclassLeaving = 'outsourceo-timeline__event--leave-right';\n\t\t} else {\n\t\t\tvar classEntering = 'outsourceo-timeline__event--selected',\n\t\t\t\tclassLeaving = '';\n\t\t}\n\n\t\tUtil.addClass(timeline.content[timeline.newDateIndex], classEntering);\n\t\tif (timeline.newDateIndex != timeline.oldDateIndex) {\n\t\t\tUtil.removeClass(timeline.content[timeline.oldDateIndex], 'outsourceo-timeline__event--selected');\n\t\t\tUtil.addClass(timeline.content[timeline.oldDateIndex], classLeaving);\n\t\t\ttimeline.contentWrapper.style.height = timeline.content[timeline.newDateIndex].offsetHeight + 'px';\n\t\t}\n\t};\n\n\tfunction resetAnimation(timeline) { // reset content classes when entering animation is over\n\t\ttimeline.contentWrapper.style.height = null;\n\t\tUtil.removeClass(timeline.content[timeline.newDateIndex], 'outsourceo-timeline__event--enter-right outsourceo-timeline__event--enter-left');\n\t\tUtil.removeClass(timeline.content[timeline.oldDateIndex], 'outsourceo-timeline__event--leave-right outsourceo-timeline__event--leave-left');\n\t};\n\n\tfunction keyNavigateTimeline(timeline, direction) { // navigate the timeline using the keyboard\n\t\tvar newIndex = (direction == 'next') ? timeline.newDateIndex + 1 : timeline.newDateIndex - 1;\n\t\tif(newIndex < 0 || newIndex >= timeline.date.length) return;\n\t\tselectNewDate(timeline, timeline.date[newIndex]);\n\t\tresetTimelinePosition(timeline, direction);\n\t};\n\n\tfunction resetTimelinePosition(timeline, direction) { //translate timeline according to new selected event position\n\t\tvar eventStyle = window.getComputedStyle(timeline.selectedDate, null),\n\t\t\teventLeft = Number(eventStyle.getPropertyValue('left').replace('px', '')),\n\t\t\ttimelineWidth = timeline.datesContainer.offsetWidth;\n\n    if( (direction == 'next' && eventLeft >= timelineWidth - timeline.translate) || (direction == 'prev' && eventLeft <= - timeline.translate) ) {\n    \ttimeline.translate = timelineWidth/2 - eventLeft;\n    \ttranslateTimeline(timeline, false);\n    }\n  };\n\n  function parseDate(timeline) { // get timestamp value for each date\n\t\tvar dateArrays = [];\n\t\tfor(var i = 0; i < timeline.date.length; i++) {\n\t\t\tvar singleDate = timeline.date[i].getAttribute('data-date'),\n\t\t\t\tdateComp = singleDate.split('T');\n\n\t\t\tif( dateComp.length > 1 ) { //both DD/MM/YEAR and time are provided\n\t\t\t\tvar dayComp = dateComp[0].split('/'),\n\t\t\t\t\ttimeComp = dateComp[1].split(':');\n\t\t\t} else if( dateComp[0].indexOf(':') >=0 ) { //only time is provide\n\t\t\t\tvar dayComp = [\"2000\", \"0\", \"0\"],\n\t\t\t\t\ttimeComp = dateComp[0].split(':');\n\t\t\t} else { //only DD/MM/YEAR\n\t\t\t\tvar dayComp = dateComp[0].split('/'),\n\t\t\t\t\ttimeComp = [\"0\", \"0\"];\n\t\t\t}\n\t\t\tvar\tnewDate = new Date(dayComp[2], dayComp[1]-1, dayComp[0], timeComp[0], timeComp[1]);\n\t\t\tdateArrays.push(newDate);\n\t\t}\n\t  return dateArrays;\n  };\n\n  function calcMinLapse(timeline) { // determine the minimum distance among events\n\t\tvar dateDistances = [];\n\t\tfor(var i = 1; i < timeline.dateValues.length; i++) {\n\t    var distance = daydiff(timeline.dateValues[i-1], timeline.dateValues[i]);\n\t    if(distance > 0) dateDistances.push(distance);\n\t\t}\n\n\t\treturn (dateDistances.length > 0 ) ? Math.min.apply(null, dateDistances) : 86400000;\n\t};\n\n\tfunction daydiff(first, second) { // time distance between events\n\t\treturn Math.round((second-first));\n\t};\n\n  window.HorizontalTimeline = HorizontalTimeline;\n\n  var horizontalTimeline = document.getElementsByClassName('js-outsourceo-timeline'),\n  \thorizontalTimelineTimelineArray = [];\n  if(horizontalTimeline.length > 0) {\n\t\tfor(var i = 0; i < horizontalTimeline.length; i++) {\n\t\t\thorizontalTimelineTimelineArray.push(new HorizontalTimeline(horizontalTimeline[i]));\n\t\t}\n\t\t// navigate the timeline when inside the viewport using the keyboard\n\t\tdocument.addEventListener('keydown', function(event){\n\t\t\tif( (event.keyCode && event.keyCode == 39) || ( event.key && event.key.toLowerCase() == 'arrowright') ) {\n\t\t\t\tupdateHorizontalTimeline('next'); // move to next event\n\t\t\t} else if((event.keyCode && event.keyCode == 37) || ( event.key && event.key.toLowerCase() == 'arrowleft')) {\n\t\t\t\tupdateHorizontalTimeline('prev'); // move to prev event\n\t\t\t}\n\t\t});\n  };\n\n  function updateHorizontalTimeline(direction) {\n\t\tfor(var i = 0; i < horizontalTimelineTimelineArray.length; i++) {\n\t\t\tif(elementInViewport(horizontalTimeline[i])) keyNavigateTimeline(horizontalTimelineTimelineArray[i], direction);\n\t\t}\n  };\n\n  /*\n\t\tHow to tell if a DOM element is visible in the current viewport?\n\t\thttp://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\n\t*/\n\tfunction elementInViewport(el) {\n\t\tvar top = el.offsetTop;\n\t\tvar left = el.offsetLeft;\n\t\tvar width = el.offsetWidth;\n\t\tvar height = el.offsetHeight;\n\n\t\twhile(el.offsetParent) {\n\t\t    el = el.offsetParent;\n\t\t    top += el.offsetTop;\n\t\t    left += el.offsetLeft;\n\t\t}\n\n\t\treturn (\n\t\t    top < (window.pageYOffset + window.innerHeight) &&\n\t\t    left < (window.pageXOffset + window.innerWidth) &&\n\t\t    (top + height) > window.pageYOffset &&\n\t\t    (left + width) > window.pageXOffset\n\t\t);\n\t}\n}());\n"]}